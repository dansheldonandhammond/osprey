<div class="t-flex t-gap-[20px]">
  <div
    class="t-relative t-h-[600px]"
    x-data="
      {
        showScrollUp: false,
        showScrollDown: true,
        currentIndex: 0,
        thumbnailHeight: 118, // 106px + spacing

        getVisibleThumbs() {
          return Array.from(this.$refs.gallery.querySelectorAll('.variant-thumbnail'))
            .filter(thumb => thumb.style.display !== 'none');
        },

        scrollThumbsUp() {
          const visibleThumbs = this.getVisibleThumbs();
          if (this.currentIndex > 0) {
            this.currentIndex--;
            this.scrollToThumb(visibleThumbs[this.currentIndex]);
          }
        },

        scrollThumbsDown() {
          const visibleThumbs = this.getVisibleThumbs();
          if (this.currentIndex < visibleThumbs.length - 1) {
            this.currentIndex++;
            this.scrollToThumb(visibleThumbs[this.currentIndex]);
          }
        },

        scrollToThumb(thumb) {
          if (thumb) {
            thumb.scrollIntoView({ behavior: 'smooth', block: 'center' });
            this.highlightThumb(thumb);
          }
          this.handleScroll();
        },

        highlightThumb(thumb) {
          const visibleThumbs = this.getVisibleThumbs();
          visibleThumbs.forEach(t => t.classList.remove('t-ring-2', 't-ring-primary'));
          thumb.classList.add('t-ring-2', 't-ring-primary');

          const featured = document.getElementById('FeaturedImage');
          if (featured) featured.src = thumb.src;
        },

        handleScroll() {
          const el = this.$refs.gallery;
          this.showScrollUp = el.scrollTop > 0;
          this.showScrollDown = el.scrollTop + el.clientHeight < el.scrollHeight - 1;
        },

        initCurrentIndex() {
          const visibleThumbs = this.getVisibleThumbs();
          this.currentIndex = 0;

          // Optional: scroll and highlight the first visible thumb
          if (visibleThumbs.length > 0) {
            this.scrollToThumb(visibleThumbs[0]);
          }
        }
      }
    "
    x-init="$nextTick(() => { handleScroll(); initCurrentIndex(); })"
  >
    <div class="scroll-btn t-hidden lg:t-flex lg:t-justify-around lg:t-absolute -t-top-[52px] lg:t-w-full ">
      <button
        type="button"
        @click="scrollThumbsUp"
        x-show="showScrollUp"
        x-transition
        class="t-w-full t-bg-transparent t-border-none t-cursor-pointer"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="none"
          class="t-w-[35px] t-h-[35px] mx-auto"
          style="transform: rotate(180deg);"
          role="img"
        >
            <path fill-rule="evenodd" clip-rule="evenodd" d="M8.29289 10.2929C8.68342 9.90237 9.31658 9.90237 9.70711 10.2929L12 12.5858L14.2929 10.2929C14.6834 9.90237 15.3166 9.90237 15.7071 10.2929C16.0976 10.6834 16.0976 11.3166 15.7071 11.7071L12.7071 14.7071C12.3166 15.0976 11.6834 15.0976 11.2929 14.7071L8.29289 11.7071C7.90237 11.3166 7.90237 10.6834 8.29289 10.2929Z" fill="currentColor"></path>
          <title>chevron-down</title>
        </svg>
      </button>
    </div>

    <div
      id="GalleryThumbnails"
      x-ref="gallery"
      @scroll="handleScroll"
      class="t-flex t-flex-col t-gap-2 t-overflow-y-scroll t-h-[600px]"
      style="-ms-overflow-style: none; scrollbar-width: none;"
    >
      <style>
        #GalleryThumbnails::-webkit-scrollbar {
          display: none;
        }
      </style>

      {% if product.variants.size == 1 %}
        {% assign images = product.media %}
        {% for image in images %}
          <img
            src="{{ image | image_url }}"
            alt="{{ image.alt | escape }}"
            thumbnail-sku="{{ product.variants.first.sku }}"
            data-index="{{ forloop.index0 }}"
            class="variant-thumbnail t-w-[106px] t-h-[106px] t-object-cover t-cursor-pointer t-border-[4px] t-border-black t-rounded t-p-[4px]"
            style="display: block;"
          >
        {% endfor %}
      {% endif %}

      <script type="application/json" id="variant-gallery-data">
        {
          {% for variant in product.variants %}
            "{{ variant.id }}": {
              "sku": "{{ variant.sku }}",
              "gallery": [
                {% assign gallery = variant.metafields.prod_variant.image_gallery.value %}
                {% if gallery %}
                  {% for image in gallery %}
                    "{{ image | image_url }}"{% unless forloop.last %},{% endunless %}
                  {% endfor %}
                {% else %}
                  {% for image in product.media %}
                    "{{ image | image_url }}"{% unless forloop.last %},{% endunless %}
                  {% endfor %}
                {% endif %}
              ]
            }{% unless forloop.last %},{% endunless %}
          {% endfor %}
        }
      </script>

      {% for variant in product.variants %}
        {% assign gallery = variant.metafields.prod_variant.image_gallery.value %}
        {% if gallery %}
          {% for image in gallery %}
            <img
              src="{{ image | image_url }}"
              alt="{{ image.alt | escape }}"
              thumbnail-sku="{{ variant.sku }}"
              data-index="{{ forloop.index0 }}"
              class="variant-thumbnail t-w-[106px] t-h-[106px] t-object-cover t-cursor-pointer t-border-[4px] t-border-black t-rounded t-p-[4px]"
              style="display: none;"
            >
          {% endfor %}
        {% endif %}
      {% endfor %}
    </div>

    <div class="scroll-btn t-hidden lg:t-flex lg:t-justify-around lg:t-absolute -t-bottom-[52px] lg:t-w-full">
      <button
        type="button"
        @click="scrollThumbsDown"
        x-show="showScrollDown"
        x-transition
        class="t-w-full t-bg-transparent t-border-none t-cursor-pointer "
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="t-w-[35px] t-h-[35px] t-mx-auto t-cursor-pointer"
          viewBox="0 0 24 24"
          fill="none"
        >
          <path fill-rule="evenodd" clip-rule="evenodd" d="M8.29289 10.2929C8.68342 9.90237 9.31658 9.90237 9.70711 10.2929L12 12.5858L14.2929 10.2929C14.6834 9.90237 15.3166 9.90237 15.7071 10.2929C16.0976 10.6834 16.0976 11.3166 15.7071 11.7071L12.7071 14.7071C12.3166 15.0976 11.6834 15.0976 11.2929 14.7071L8.29289 11.7071C7.90237 11.3166 7.90237 10.6834 8.29289 10.2929Z" fill="currentColor" />
        </svg>
      </button>
    </div>
  </div>

  <div class="variant-gallery t-mb-4 t-flex t-flex-row-reverse  t-max-w-[612px] t-max-h-[612px] t-relative">
    <img
      id="FeaturedImage"
      src="{% if product.variants.size == 1 %}{{ product.selected_or_first_available_variant.featured_image | image_url: width: 600, height: 600 }}{% endif %}"
      alt="Featured variant image"
      class="t-object-contain t-rounded t-border t-h-[612px] t-w-[612px]"
    >

    {% assign badges = product.metafields.custom.badge %}

    {% if badges %}
      <div class="badge-container t-absolute t-top-2 t-left-2 t-z-[2] t-flex t-flex-wrap t-gap-1">
        {% for badge in badges.value %}
          {% assign label = badge.label.value %}
          {% assign expiry = badge.expiry_date.value | default: '' %}
          {% assign color = badge.color.value | default: '#000000' %}
          {% assign has_expired = false %}

          {% if expiry != blank and expiry <= now %}
            {% assign has_expired = true %}
          {% endif %}

          {% if label and has_expired == false %}
            <div
              class="badge t-text-[10px] t-sm:text-xs t-font-semibold t-text-white t-bg-opacity-90 t-px-2 t-py-[2px] t-rounded t-shadow-sm t-uppercase t-whitespace-nowrap"
              style="background-color: {{ color }}; min-width: fit-content; text-align: center;"
            >
              <span class="t-px-[5px] t-py-[2px] t-text-[14px] t-my-0" style="min-width: fit-content;">
                {{ label }}
              </span>
            </div>
          {% endif %}
        {% endfor %}
      </div>
    {% endif %}

    <!-- Fallback variant IDs for JS (used if no variant= in URL) -->
    <script>
      window.productVariants = [
        {% for variant in product.variants %}
          { id: {{ variant.id }}, sku: "{{ variant.sku }}" }{% unless forloop.last %},{% endunless %}
        {% endfor %}
      ];
    </script>

    <script>
      function updateGallery(variantId) {
        console.log(`🔄 updateGallery called with variantId: ${variantId}`);

        const data = JSON.parse(document.getElementById('variant-gallery-data').textContent);
        const variant = data[variantId];
        const featuredImage = document.getElementById('FeaturedImage');
        const allThumbs = document.querySelectorAll('.variant-thumbnail');

        const totalVariants = window.productVariants.length;

        if (totalVariants > 1) {
          console.log(`👀 Hiding ${allThumbs.length} thumbnails (multiple variants)...`);
          allThumbs.forEach((img) => {
            img.style.display = 'none';
            img.classList.remove('t-ring-2', 't-ring-primary');
          });
        }

        if (!variant || !variant.gallery || variant.gallery.length === 0) {
          console.warn(`⚠️ No gallery found for variant ID: ${variantId}`);

          const fallbackVariant = window.productVariants.find((v) => v.id == variantId);
          const fallbackImageEl = document.querySelector(`[thumbnail-sku="${fallbackVariant?.sku}"]`);
          const fallbackImage = fallbackImageEl?.src;

          if (fallbackImage) {
            console.log(`🛟 Using fallback image: ${fallbackImage}`);

            const featuredImage = document.getElementById('FeaturedImage');
            if (featuredImage) {
              featuredImage.src = fallbackImage;
              featuredImage.style.display = 'block';
            } else {
              console.warn('❌ #FeaturedImage not found to update.');
            }
          } else {
            console.warn('🕳️ No fallback image found either.');
          }

          return;
        }

        // Set featured image
        console.log(`🖼️ Setting featured image to: ${variant.gallery[0]}`);
        featuredImage.src = variant.gallery[0];
        featuredImage.style.display = 'block';

        const selector = `[thumbnail-sku="${variant.sku}"]`;
        const matchingThumbs = document.querySelectorAll(selector);
        console.log(`🔍 Looking for thumbnails with selector ${selector}`);
        console.log(`🧲 Found ${matchingThumbs.length} matching thumbnails`);

        matchingThumbs.forEach((thumb, i) => {
          thumb.style.display = 'block';
          thumb.onclick = null;
          thumb.onclick = () => {
            featuredImage.src = thumb.src;

            // Clear selection rings
            matchingThumbs.forEach((t) => t.classList.remove('t-ring-2', 't-ring-primary'));
            thumb.classList.add('t-ring-2', 't-ring-primary');
          };

          // ✅ Highlight first thumb
          if (i === 0) {
            thumb.classList.add('t-ring-2', 't-ring-primary');
          }
        });
      }

      function getVariantFromUrl() {
        const params = new URLSearchParams(window.location.search);
        return params.get('variant');
      }

      document.addEventListener('DOMContentLoaded', () => {
        const variantFromUrl = getVariantFromUrl();
        console.log('🔍 variantFromUrl:', variantFromUrl);

        const fallbackVariants = window.productVariants || [];
        const fallbackVariantId = fallbackVariants[0]?.id;

        const initialVariantId = variantFromUrl || fallbackVariantId;
        console.log('🚀 Initial variant ID:', initialVariantId);

        if (initialVariantId) updateGallery(initialVariantId.toString());

        document.addEventListener('variant:change', (event) => {
          const newId = event.detail?.variant?.id;
          console.log('🔄 variant:change event fired with ID:', newId);
          if (newId) updateGallery(newId.toString());
        });
      });
    </script>

    <script>
      document.querySelectorAll('.variant-thumbnail').forEach((thumb) => {
        const variantSku = thumb.getAttribute('thumbnail-sku');

        thumb.onclick = () => {
          const featuredImage = document.getElementById('FeaturedImage');
          if (featuredImage) {
            featuredImage.src = thumb.src;

            // Remove ring from all
            document.querySelectorAll(`[thumbnail-sku="${variantSku}"]`).forEach((t) => {
              t.classList.remove('t-ring-2', 't-ring-primary');
            });

            // Highlight current thumb
            thumb.classList.add('t-ring-2', 't-ring-primary');
          }
        };
      });
    </script>
  </div>
</div>

<script id="variant-data" type="application/json">
  {{ product.variants | json }}
</script>
