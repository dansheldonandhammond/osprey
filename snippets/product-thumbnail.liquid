<!-- Variant Gallery JSON -->
<script type="application/json" id="variant-gallery-data">
  {
    {% for variant in product.variants %}
      "{{ variant.id }}": {
        "sku": "{{ variant.sku }}",
        "gallery": [
          {% assign gallery = variant.metafields.prod_variant.image_gallery.value %}
          {% if gallery %}
            {% for image in gallery %}
              "{{ image | image_url }}"{% unless forloop.last %},{% endunless %}
            {% endfor %}
          {% endif %}
        ]
      }{% unless forloop.last %},{% endunless %}
    {% endfor %}
  }
</script>

<script>
  const VARIANT_PARAM = 'variant';
  let lastKnownVariant = null;

  function updateGallery(variantId) {
    const data = JSON.parse(document.getElementById('variant-gallery-data').textContent);
    const variant = data[variantId];
    const featuredImage = document.getElementById('FeaturedImage');
    const allThumbs = document.querySelectorAll('.variant-thumbnail');

    console.log('üì∏ updateGallery called for variant ID:', variantId);
    if (!variant) {
      console.warn('üö´ Variant not found in data.');
      return;
    }

    // Reset all thumbnails
    allThumbs.forEach((img) => {
      img.style.display = 'none';
      img.classList.remove('t-ring-2', 't-ring-primary');
    });

    if (!variant.gallery || variant.gallery.length === 0) {
      console.warn('üñºÔ∏è No gallery for this variant.');
      return;
    }

    // Set featured image
    featuredImage.src = variant.gallery[0];
    console.log('üåü Featured image set to:', variant.gallery[0]);

    // Show thumbnails for this variant
    const thumbsContainer = document.getElementById('GalleryThumbnails');
    const matchingThumbs = thumbsContainer.querySelectorAll(`[thumbnail-sku="${variant.sku}"]`);

    console.log(`üß© Found ${matchingThumbs.length} thumbnails for SKU: ${variant.sku}`);

    matchingThumbs.forEach((thumb, index) => {
      const newThumb = thumb.cloneNode(true);
      thumb.replaceWith(newThumb);
      newThumb.style.display = 'block';

      newThumb.addEventListener('click', () => {
        console.log('üñ±Ô∏è Thumbnail clicked, setting featured to', newThumb.src);
        featuredImage.src = newThumb.src;

        matchingThumbs.forEach((t) => t.classList.remove('t-ring-2', 't-ring-primary'));
        newThumb.classList.add('t-ring-2', 't-ring-primary');
      });

      if (index === 0) {
        newThumb.classList.add('t-ring-2', 't-ring-primary');
      }
    });
  }

  <script>
  function getVariantFromUrl() {
    const params = new URLSearchParams(window.location.search);
    return params.get("variant");
  }

  function updateGallery(variantId) {
    const data = JSON.parse(
      document.getElementById("variant-gallery-data").textContent
    );
    const variant = data[variantId];
    const featuredImage = document.getElementById("FeaturedImage");
    const allThumbs = document.querySelectorAll(".variant-thumbnail");

    console.log("üì∏ updateGallery called for variant ID:", variantId);

    // Reset all thumbnails
    allThumbs.forEach((img) => {
      img.style.display = "none";
      img.classList.remove("t-ring-2", "t-ring-primary");
    });

    if (!variant || !variant.gallery || variant.gallery.length === 0) {
      console.warn("üñºÔ∏è No gallery found for variant ID:", variantId);
      return;
    }

    // Set featured image
    featuredImage.src = variant.gallery[0];
    console.log("üåü Featured image set to:", variant.gallery[0]);

    // Find thumbnails for this SKU
    const thumbsContainer = document.getElementById("GalleryThumbnails");
    const matchingThumbs = thumbsContainer.querySelectorAll(
      `[thumbnail-sku="${variant.sku}"]`
    );

    console.log(`üß© Found ${matchingThumbs.length} thumbnails for SKU: ${variant.sku}`);

    const newThumbs = [];

    matchingThumbs.forEach((thumb, index) => {
      const clonedThumb = thumb.cloneNode(true);
      thumb.replaceWith(clonedThumb);
      clonedThumb.style.display = "block";
      newThumbs.push(clonedThumb);

      clonedThumb.addEventListener("click", () => {
        console.log("üñ±Ô∏è Thumbnail clicked, setting featured to", clonedThumb.src);
        featuredImage.src = clonedThumb.src;

        newThumbs.forEach((t) => t.classList.remove("t-ring-2", "t-ring-primary"));
        clonedThumb.classList.add("t-ring-2", "t-ring-primary");
      });

      if (index === 0) {
        clonedThumb.classList.add("t-ring-2", "t-ring-primary");
      }
    });
  }

  document.addEventListener("DOMContentLoaded", () => {
    console.log("‚úÖ DOM fully loaded");

    const variantFromUrl = getVariantFromUrl();
    const selected = ShopifyAnalytics?.meta?.selectedVariantId;
    const fallback = ShopifyAnalytics?.meta?.product?.variants?.[0]?.id;

    const initialVariantId = variantFromUrl || selected || fallback;

    if (initialVariantId) {
      updateGallery(initialVariantId.toString());

      // Manually fire variant:change to ensure others pick it up
      document.dispatchEvent(
        new CustomEvent("variant:change", {
          detail: {
            variant: {
              id: parseInt(initialVariantId),
            },
          },
        })
      );
    }

    // Re-run updateGallery on real variant changes
    document.addEventListener("variant:change", (event) => {
      const newId = event.detail?.variant?.id;
      if (newId) {
        console.log("üîÑ variant:change ‚Üí Updating to variant ID:", newId);
        updateGallery(newId.toString());
      } else {
        console.warn("‚ö†Ô∏è variant:change event missing ID");
      }
    });
  });
</script>


  document.addEventListener('DOMContentLoaded', () => {
    console.log('‚úÖ DOM fully loaded');

    const variantFromUrl = getVariantFromUrl();
    const fallback = ShopifyAnalytics?.meta?.product?.variants?.[0]?.id;
    const initialVariantId = variantFromUrl || fallback;

    if (initialVariantId) {
      lastKnownVariant = initialVariantId;
      updateGallery(initialVariantId.toString());
    }

    monitorUrlChanges();

    document.addEventListener('variant:change', (event) => {
      const newId = event.detail?.variant?.id;
      if (newId) {
        console.log('üîÑ variant:change ‚Üí Updating to variant ID:', newId);
        lastKnownVariant = newId;
        updateGallery(newId.toString());
      }
    });
  });
</script>
